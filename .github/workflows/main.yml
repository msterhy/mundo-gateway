name: Gateway CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-22.04

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'  # 修正 Go 版本

      # 配置 Go 访问私有模块
      - name: Configure Go for private modules
        run: |
          git config --global url."https://${{ secrets.GH_TOKEN }}@github.com/".insteadOf "https://github.com/"
          go env -w GOPRIVATE=github.com/trancecho/mundo-gateway
          
      - name: Setup Git for private module access
        run: git config --global url."https://${{ secrets.GH_TOKEN }}@github.com/".insteadOf "https://github.com/"


      # 安装依赖
      - name: Install dependencies
        run: go mod tidy

      # 编译 Go 程序
      - name: Build Go application
        run: go build -ldflags "-s -w" -o ./mundo ./cmd/main.go

      # 压缩二进制文件
      - name: Compress the binary
        run: gzip -k ./mundo

      # 设置 SSH 连接
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 确保服务器上的 mundo 目录存在，并停止旧进程
      - name: Stop mundo and prepare directory
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          mkdir -p /root/mundo  # 确保目录存在
          screen -S mundo -X quit || true
          pkill -f mundo || true
          EOF

      # 传输编译后的二进制文件到服务器
      - name: Transfer binary to JD Cloud Server
        run: scp -C -o StrictHostKeyChecking=no ./mundo.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/root/mundo/

      # 在服务器上运行二进制文件
      - name: Deploy on JD Cloud Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd /root/mundo
          gunzip -f ./mundo.gz
          chmod +x ./mundo  # 确保可执行权限
          screen -dmS mundo bash -c './mundo >> mundo.log 2>&1'  # 运行并写入日志
          EOF



