name: Mundo-Gateway CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'

      - name: Debug SSH Connection
        run: |
          echo "Server User: ${{ secrets.SERVER_USER }}"
          echo "Server Host: ${{ secrets.SERVER_HOST }}"

      - name: Set up Git for private repo access
        run: |
          git config --global url."https://${{ secrets.GH_TOKEN }}@github.com/".insteadOf "https://github.com/"
          echo "GOPRIVATE=github.com/kll-svg/*" >> $GITHUB_ENV
          
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install buf tool on the server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          # 下载 buf 压缩包
          curl -sSL https://github.com/bufbuild/buf/releases/download/v1.10.0/buf-1.10.0-linux-amd64.tar.gz -o /tmp/buf.tar.gz
          
          # 检查文件类型
          file /tmp/buf.tar.gz
          
          # 解压缩 buf.tar.gz
          tar -xvzf /tmp/buf.tar.gz -C /tmp
          
          # 确保 buf 二进制文件存在
          ls /tmp
          
          # 创建目标路径，如果不存在
          sudo mkdir -p /root/local/bin
          
          # 将解压出的 buf 文件移动到合适的路径（例如 /usr/local/bin）
          sudo mv /tmp/buf-1.10.0-linux-amd64 /root/local/bin/buf
          
          # 设置可执行权限
          sudo chmod +x /root/local/bin/buf
          EOF


      - name: Generate pb files on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          mkdir -p /root/mundo-gateway && cd /root/mundo-gateway
          buf generate
          EOF

      - name: Install dependencies
        run: go mod tidy

      - name: Build Go application
        run: go build -ldflags "-s -w" -o ./mundo-gateway ./cmd/main.go

      - name: Compress the binary
        run: gzip -k ./mundo-gateway

      # 停止旧的 `mundo-gateway` 容器
      - name: Stop existing Docker containers
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -e
          echo "==== 停止旧的 mundo-gateway 容器 ===="
          cd /root/mundo-gateway
          docker-compose down || true
          EOF

      # 上传新文件并重启 Docker 容器
      - name: Upload new binary and restart Docker containers
        run: |
          scp -o StrictHostKeyChecking=no ./mundo-gateway.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/root/mundo-gateway/mundo-gateway.gz
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -e
          echo "==== 更新 mundo-gateway 二进制文件 ===="
          cd /root/mundo-gateway
          gunzip -f ./mundo-gateway.gz
          chmod +x ./mundo-gateway
          echo "==== 重新启动 mundo-gateway 容器 ===="
          docker-compose up -d --build
          EOF









